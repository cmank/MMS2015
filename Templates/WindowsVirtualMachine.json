{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "subnet1Name": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },     
    "VMName": {
      "type": "string",
      "metadata": {
        "description": "Server Name"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter, Windows-Server-Technical-Preview."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
       "metadata": {
        "description": "Size of the VM"
      }
    },
    "modulesUrl": {
        "type": "string",
        "defaultValue": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
        "metadata": {
            "description": "URL for the DSC configuration package. NOTE: Can be a Github url(raw) to the zip file (this is the default value)"
        }
    },
    "configurationFunction": {
        "type": "string",
        "defaultValue": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
        "metadata": {
            "description": "DSC configuration function to call. Should contain filename and function in format fileName.ps1\\configurationfunction"
        }
    },
    "registrationKey": {
        "type": "string",
        "metadata": {
            "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
        }
    },
    "registrationUrl": {
        "type": "string",
        "metadata": {
            "description": "Registration url of the Azure Automation DSC pull/reporting server"
        }
    },
    "nodeConfigurationName": {
        "type": "string",
        "metadata": {
            "description": "The name of the node configuration, on the Azure Automation DSC pull server, that this node will be configured as"
        }
    },
    "configurationMode": {
        "type": "string",
        "defaultValue": "ApplyAndMonitor",
        "allowedValues": [
            "ApplyOnly",
            "ApplyAndMonitor",
            "ApplyAndAutoCorrect"
        ],
        "metadata": {
            "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
        }
    },
    "configurationModeFrequencyMins": {
        "type": "int",
        "defaultValue": 15,
        "metadata": {
            "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
        }
    },
    "refreshFrequencyMins": {
        "type": "int",
        "defaultValue": 30,
        "metadata": {
            "description": "DSC agent (LCM) refresh frequency setting, in minutes"
        }
    },
    "rebootNodeIfNeeded": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
            "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
        }
    },
    "actionAfterReboot": {
        "type": "string",
        "defaultValue": "ContinueConfiguration",
        "allowedValues": [
            "ContinueConfiguration",
            "StopConfiguration"
        ],
        "metadata": {
            "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
        }
    },
    "allowModuleOverwrite": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
            "description": "DSC agent (LCM) allowModuleOverwrite setting"
        }
    },
    "timestamp": {
        "type": "string",
        "metadata": {
            "description": "The current datetime, as a string, to force the request to go through ARM even if all fields are the same as last ARM deployment of this template; example in parameters file is in MM/dd/yyyy H:mm:ss tt format"
        }
    }
  },
    "variables": {
      "location": "[resourceGroup().location]",
      "imagePublisher": "MicrosoftWindowsServer",
      "windowsOSVersion": "2012-R2-Datacenter",
      "imageOffer": "WindowsServer",
      "OSDiskName": "[concat(parameters('VMName'),'-osdisk')]",
      "nicName": "[concat(parameters('VMName'),'-nic')]",  
      "storageAccountType": "Standard_LRS",
      "publicIPAddressName": "[concat(parameters('VMName'),'publicip')]",
      "publicIPAddressType": "Dynamic",
      "vmStorageAccountContainerName": "vhds",
      "vmName": "[parameters('VMName')]",
      "vmSize": "Standard_A2",      
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]" 
    },
    "resources": [

      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[variables('location')]",
        "tags": {
          "displayName": "PublicIPAddress"
        },
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicIPAddressName')]"
          }
        }
      },

      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[variables('location')]",
        "tags": {
          "displayName": "NetworkInterface"
        },
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[variables('location')]",
        "tags": {
          "displayName": "VirtualMachine"
        },
        "dependsOn": [
          
          "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computername": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat('http://',parameters('StorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(parameters('VMName'),'/dscExtension')]",
        "apiVersion": "2015-06-15",
        "location": "[variables('location')]",
        "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.6",
            "protectedSettings": {
                "Items": {
                    "registrationKeyPrivate": "[parameters('registrationKey')]"
                }
            },
            "settings": {
                "ModulesUrl": "[parameters('modulesUrl')]",
                "SasToken": "",
                "ConfigurationFunction": "[parameters('configurationFunction')]",
                "Properties": [
                    {
                        "Name": "RegistrationKey",
                        "Value": {
                            "UserName": "PLACEHOLDER_DONOTUSE",
                            "Password": "PrivateSettingsRef:registrationKeyPrivate"
                        },
                        "TypeName": "System.Management.Automation.PSCredential"
                    },
                    {
                        "Name": "RegistrationUrl",
                        "Value": "[parameters('registrationUrl')]",
                        "TypeName": "System.String"
                    },
                    {
                        "Name": "NodeConfigurationName",
                        "Value": "[parameters('nodeConfigurationName')]",
                        "TypeName": "System.String"
                    },
                    {
                        "Name": "ConfigurationMode",
                        "Value": "[parameters('configurationMode')]",
                        "TypeName": "System.String"
                    },
                    {
                        "Name": "ConfigurationModeFrequencyMins",
                        "Value": "[parameters('configurationModeFrequencyMins')]",
                        "TypeName": "System.Int32"
                    },
                    {
                        "Name": "RefreshFrequencyMins",
                        "Value": "[parameters('refreshFrequencyMins')]",
                        "TypeName": "System.Int32"
                    },
                    {
                        "Name": "RebootNodeIfNeeded",
                        "Value": "[parameters('rebootNodeIfNeeded')]",
                        "TypeName": "System.Boolean"
                    },
                    {
                        "Name": "ActionAfterReboot",
                        "Value": "[parameters('actionAfterReboot')]",
                        "TypeName": "System.String"
                    },
                    {
                        "Name": "AllowModuleOverwrite",
                        "Value": "[parameters('allowModuleOverwrite')]",
                        "TypeName": "System.Boolean"
                    },
                    {
                        "Name": "Timestamp",
                        "Value": "[parameters('timestamp')]",
                        "TypeName": "System.String"
                    }
                ]
            }
        }
      }
    ]
  }
